{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\babci\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\GitHub\\\\suggest-me\\\\src\\\\Pages\\\\Details\\\\Details.jsx\",\n  _s = $RefreshSig$();\nimport style from \"./Details.module.scss\";\nimport DetailsProp from \"../../Components/UI/DetailsProp/DetailsProp\";\nimport ReversDetailsProp from \"../../Components/UI/ReversDetailsProp/ReversDetailsProp\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Details = () => {\n  _s();\n  var _movie$rating;\n  const [movie, setMovie] = useState({});\n  const params = useParams();\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const response = await fetch(`https://cogitize-practice-suggest.onrender.com/movie/${params.id}`);\n        const data = await response.json();\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovie();\n  }, [params]);\n  const getStringGenres = () => {\n    var _movie$genres;\n    return (_movie$genres = movie.genres) === null || _movie$genres === void 0 ? void 0 : _movie$genres.map(genre => genre.name).join(\", \");\n  };\n  const getStringDate = movieDate => {\n    let string = \"\";\n    if (!movieDate) {\n      return string;\n    }\n    const date = new Date(movieDate);\n    string = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n    return string;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.content,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: style.large_image,\n          src: movie.backdrop,\n          alt: \"Large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.title_box,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.title_genre,\n            value: movie.genres\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.title_name,\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.film_content,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: style.film_image,\n            src: movie.poster,\n            alt: \"SmallAve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.prop_list,\n          children: [/*#__PURE__*/_jsxDEV(ReversDetailsProp, {\n            label: movie.title,\n            value: movie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: style.rate_details,\n            children: /*#__PURE__*/_jsxDEV(DetailsProp, {\n              isRate: true,\n              label: \"Rate\",\n              value: (_movie$rating = movie.rating) === null || _movie$rating === void 0 ? void 0 : _movie$rating.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DetailsProp, {\n            label: \"Type\",\n            value: movie.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DetailsProp, {\n            label: \"Release Date\",\n            value: getStringDate(movie.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DetailsProp, {\n            label: \"Run time\",\n            value: movie.runtime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(DetailsProp, {\n            label: \"Genres\",\n            value: getStringGenres(movie.genres)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Details, \"EDPsQzlTyEeOwBKEi3R9y6EtQiA=\", false, function () {\n  return [useParams];\n});\n_c = Details;\nexport default Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["style","DetailsProp","ReversDetailsProp","useParams","useEffect","useState","Details","movie","setMovie","params","getMovie","response","fetch","id","data","json","error","console","log","getStringGenres","genres","map","genre","name","join","getStringDate","movieDate","string","date","Date","getFullYear","getMonth","getDate","container","content","large_image","backdrop","title_box","title_genre","title_name","title","film_content","film_image","poster","prop_list","description","rate_details","rating","toFixed","type","runtime"],"sources":["C:/Users/babci/OneDrive/Документы/GitHub/suggest-me/src/Pages/Details/Details.jsx"],"sourcesContent":["import style from \"./Details.module.scss\";\r\nimport DetailsProp from \"../../Components/UI/DetailsProp/DetailsProp\"\r\nimport ReversDetailsProp from \"../../Components/UI/ReversDetailsProp/ReversDetailsProp\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Details = () => {\r\n    const [movie, setMovie] = useState({});\r\n\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        const getMovie = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    `https://cogitize-practice-suggest.onrender.com/movie/${params.id}`\r\n                );\r\n                const data = await response.json();\r\n\r\n                setMovie(data);\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        };\r\n\r\n        getMovie();\r\n    }, [params]);\r\n\r\n    const getStringGenres = () => {\r\n        return movie.genres?.map((genre) => genre.name).join(\", \");\r\n    };\r\n\r\n    const getStringDate = (movieDate) => {\r\n        let string = \"\";\r\n\r\n        if (!movieDate) {\r\n            return string;\r\n        }\r\n\r\n        const date = new Date(movieDate);\r\n        string = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\r\n\r\n        return string;\r\n    };\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.content}>\r\n                <div>\r\n                    <img className={style.large_image} src={movie.backdrop} alt=\"Large\"/>\r\n                    <div className={style.title_box}>\r\n                        <div className={style.title_genre} value={movie.genres}>\r\n                        </div>\r\n                        <div className={style.title_name}>\r\n                            {movie.title}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={style.film_content}>\r\n                    <div>\r\n                        <img className={style.film_image} src={movie.poster} alt=\"SmallAve\"/>\r\n                    </div>\r\n                    <div className={style.prop_list}>\r\n                        <ReversDetailsProp label={movie.title} value={movie.description} />\r\n                        <div className={style.rate_details}>\r\n                            <DetailsProp\r\n                                isRate={true}\r\n                                label={\"Rate\"}\r\n                                value={movie.rating?.toFixed(1)}\r\n                            />\r\n                        </div>\r\n                        <DetailsProp label={\"Type\"} value={movie.type} />\r\n                        <DetailsProp\r\n                            label={\"Release Date\"}\r\n                            value={getStringDate(movie.date)}\r\n                        />\r\n                         <DetailsProp label={\"Run time\"} value={movie.runtime} />\r\n                        <DetailsProp\r\n                            label={\"Genres\"}\r\n                            value={getStringGenres(movie.genres)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,uBAAuB;AACzC,OAAOC,WAAW,MAAM,6CAA6C;AACrE,OAAOC,iBAAiB,MAAM,yDAAyD;AACvF,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAE5C,MAAMC,OAAO,GAAG,MAAM;EAAA;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEtC,MAAMI,MAAM,GAAGN,SAAS,EAAE;EAE1BC,SAAS,CAAC,MAAM;IACZ,MAAMM,QAAQ,GAAG,YAAY;MACzB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,wDAAuDH,MAAM,CAACI,EAAG,EAAC,CACtE;QACD,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;QAElCP,QAAQ,CAACM,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IAEDN,QAAQ,EAAE;EACd,CAAC,EAAE,CAACD,MAAM,CAAC,CAAC;EAEZ,MAAMU,eAAe,GAAG,MAAM;IAAA;IAC1B,wBAAOZ,KAAK,CAACa,MAAM,kDAAZ,cAAcC,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;EAC9D,CAAC;EAED,MAAMC,aAAa,GAAIC,SAAS,IAAK;IACjC,IAAIC,MAAM,GAAG,EAAE;IAEf,IAAI,CAACD,SAAS,EAAE;MACZ,OAAOC,MAAM;IACjB;IAEA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACH,SAAS,CAAC;IAChCC,MAAM,GAAI,GAAEC,IAAI,CAACE,WAAW,EAAG,IAAGF,IAAI,CAACG,QAAQ,EAAG,IAAGH,IAAI,CAACI,OAAO,EAAG,EAAC;IAErE,OAAOL,MAAM;EACjB,CAAC;EACD,oBACI;IAAK,SAAS,EAAE3B,KAAK,CAACiC,SAAU;IAAA,uBAC5B;MAAK,SAAS,EAAEjC,KAAK,CAACkC,OAAQ;MAAA,wBAC1B;QAAA,wBACI;UAAK,SAAS,EAAElC,KAAK,CAACmC,WAAY;UAAC,GAAG,EAAE5B,KAAK,CAAC6B,QAAS;UAAC,GAAG,EAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAE,eACrE;UAAK,SAAS,EAAEpC,KAAK,CAACqC,SAAU;UAAA,wBAC5B;YAAK,SAAS,EAAErC,KAAK,CAACsC,WAAY;YAAC,KAAK,EAAE/B,KAAK,CAACa;UAAO;YAAA;YAAA;YAAA;UAAA,QACjD,eACN;YAAK,SAAS,EAAEpB,KAAK,CAACuC,UAAW;YAAA,UAC5BhC,KAAK,CAACiC;UAAK;YAAA;YAAA;YAAA;UAAA,QACV;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ,eACN;QAAK,SAAS,EAAExC,KAAK,CAACyC,YAAa;QAAA,wBAC/B;UAAA,uBACI;YAAK,SAAS,EAAEzC,KAAK,CAAC0C,UAAW;YAAC,GAAG,EAAEnC,KAAK,CAACoC,MAAO;YAAC,GAAG,EAAC;UAAU;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QACnE,eACN;UAAK,SAAS,EAAE3C,KAAK,CAAC4C,SAAU;UAAA,wBAC5B,QAAC,iBAAiB;YAAC,KAAK,EAAErC,KAAK,CAACiC,KAAM;YAAC,KAAK,EAAEjC,KAAK,CAACsC;UAAY;YAAA;YAAA;YAAA;UAAA,QAAG,eACnE;YAAK,SAAS,EAAE7C,KAAK,CAAC8C,YAAa;YAAA,uBAC/B,QAAC,WAAW;cACR,MAAM,EAAE,IAAK;cACb,KAAK,EAAE,MAAO;cACd,KAAK,mBAAEvC,KAAK,CAACwC,MAAM,kDAAZ,cAAcC,OAAO,CAAC,CAAC;YAAE;cAAA;cAAA;cAAA;YAAA;UAClC;YAAA;YAAA;YAAA;UAAA,QACA,eACN,QAAC,WAAW;YAAC,KAAK,EAAE,MAAO;YAAC,KAAK,EAAEzC,KAAK,CAAC0C;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG,eACjD,QAAC,WAAW;YACR,KAAK,EAAE,cAAe;YACtB,KAAK,EAAExB,aAAa,CAAClB,KAAK,CAACqB,IAAI;UAAE;YAAA;YAAA;YAAA;UAAA,QACnC,eACD,QAAC,WAAW;YAAC,KAAK,EAAE,UAAW;YAAC,KAAK,EAAErB,KAAK,CAAC2C;UAAQ;YAAA;YAAA;YAAA;UAAA,QAAG,eACzD,QAAC,WAAW;YACR,KAAK,EAAE,QAAS;YAChB,KAAK,EAAE/B,eAAe,CAACZ,KAAK,CAACa,MAAM;UAAE;YAAA;YAAA;YAAA;UAAA,QACvC;QAAA;UAAA;UAAA;UAAA;QAAA,QACA;MAAA;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA/EKd,OAAO;EAAA,QAGMH,SAAS;AAAA;AAAA,KAHtBG,OAAO;AAiFb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}